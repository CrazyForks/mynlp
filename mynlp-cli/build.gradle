/*
 * Copyright 2018 mayabot.com authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
//    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.3.20"
}

description = "mynlp-cli,包含了命令行程序。该程序不发布到maven仓库中。"

mainClassName = 'com.mayabot.nlp.cli.Application'

jar {

    manifest {
        attributes 'Mynlp-Version': project.version

    }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs
    test.kotlin.srcDirs = test.java.srcDirs
}

dependencies {

    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile project(":mynlp-segment")
    compile project(":mynlp-pinyin")
    compile project(":mynlp-transform")
    compile project(":mynlp-classification")

    testCompile group: 'junit', name: 'junit', version: '4.12'


}
//
//shadowJar {
//    classifier ''
////    relocate 'com.google', 'com.mayabot.t.google'
////    relocate 'org.apache.commons.lang3', 'com.mayabot.t.lang3'
////    relocate 'org.apache.commons.cli', 'com.mayabot.t.cli'
////    relocate 'com.alibaba', 'com.mayabot.t.alibaba'
////    relocate 'org.fusesource', 'com.mayabot.t.fusesource'
////
////    relocate 'org.xerial.snappy', 'com.mayabot.t.snappy'
////    relocate 'com.esotericsoftware', 'com.mayabot.t.esotericsoftware'
////    relocate 'org.objenesis', 'com.mayabot.t.objenesis'
////    relocate 'org.codehaus.mojo', 'com.mayabot.t.mojo'
//
////    dependencies {
////        exclude(project(':mynlp-segment-resources'))
////        exclude(project(':mynlp-segment-resources'))
////    }
//}

// disable all publish
project.afterEvaluate {
    project.tasks.withType(AbstractPublishToMaven.class){
        enabled = false
    }
}

//
//publishing.publications {
//
//        shadow(MavenPublication) { publication ->
//            project.shadow.component(publication)
//            artifact sourceJar {
//                classifier "sources"
//            }
//
//            artifact javadocJar {
//                classifier "javadoc"
//            }
//        }
//}
//
//signing {
//    sign publishing.publications.shadow
//}
