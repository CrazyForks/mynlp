/*
 * Copyright 2018 mayabot.com authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'idea'
apply plugin: 'eclipse'

description = "mynlp是mayabot开源的中文自然语言处理工具集"

ext {
    guava_version = "19.0"
}

//def buildVersion = "2.0.x"
def buildVersion = "2.1.0"
def snapShot = true

subprojects {
    if(project.path==":modules" ){
        return
    }
    description = "Maya Nlp subproject ${project.path}"

    group = 'com.mayabot.mynlp'
    version = buildVersion

    if(snapShot){
        version += "-SNAPSHOT"
    }

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'


    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

    publishing {
        publications {
            java(MavenPublication) {

                from components.java

                artifact sourceJar {
                    classifier "sources"
                }

                artifact javadocJar {
                    classifier "javadoc"
                }
                pom {
                    name = 'mynlp'
                    description = project.description
                    url = 'https://github.com/mayabot/mynlp'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'jimichan'
                            name = 'Jimi chan'
                            email = 'jimichan@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:mayabot/mynlp.git'
                        developerConnection = 'scm:git:git@github.com:mayabot/mynlp.git'
                        url = 'git@github.com:mayabot/mynlp.git'
                    }
                }

            }

        }

        repositories {

            if(project.hasProperty("maya_pri_user")){
                maven {
                    name 'MayaPrivate'
                    if (project.version.endsWith('-SNAPSHOT')) {
                        url "${maya_pri_snapshot}"
                    } else {
                        url = "${maya_pri_release}"
                    }
                    credentials{
                        username "${maya_pri_user}"
                        password "${maya_pri_pass}"
                    }
                }
            }

            if(!snapShot && project.hasProperty("oss_user")){
                maven {
                    name 'OssPublic'
                    if (project.version.endsWith('-SNAPSHOT')) {
                        url "https://oss.sonatype.org/content/repositories/snapshots/"
                    } else {
                        url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    }
                    credentials{
                        username "${oss_user}"
                        password "${oss_password}"
                    }
                }
            }

        }

    }

    signing {
        sign publishing.publications.java
    }
}

idea {
    project {
        vcs = 'Git'
    }
}

allprojects {
    repositories{
        mavenCentral()
    }
}


if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.encoding = "UTF-8"
        }
        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn"]
        }
//        tasks.withType(Test){
//            enabled = false
//        }

        tasks.withType(Javadoc) {
            options{
                encoding "UTF-8"
                charSet 'UTF-8'
                links "http://docs.oracle.com/javase/8/docs/api"
            }
        }
    }
}