plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61" apply false
}

apply plugin: 'idea'
apply plugin: 'eclipse'

description = "mynlp是mayabot开源的中文自然语言处理工具集"

def buildVersion = "3.1.0"
def snapShot = true

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    if (project.path == ":modules") {
        return
    }
    description = "Maya Nlp subproject ${project.path}"

    group = 'com.mayabot.mynlp'
    version = buildVersion

    if (snapShot) {
        version += "-SNAPSHOT"
    }

    def toPublish = true

    def notPublish = new HashSet<String>()
    notPublish.add("mynlp-restful")
    notPublish.add("mynlp-example")
    notPublish.add("mynlp-elasticsearch6")

    if( notPublish.contains(project.name)){
        toPublish = false
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'

    if(toPublish){
        apply plugin: 'maven-publish'
        apply plugin: 'signing'
    }


    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    sourceSets {
        main.kotlin.srcDirs = main.java.srcDirs
        test.kotlin.srcDirs = test.java.srcDirs
    }


    if (toPublish) {

        task sourceJar(type: Jar) {
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            archiveClassifier.set("javadoc")
            from javadoc.destinationDir
        }

        publishing {

            publications {
                java(MavenPublication) {

                    from components.java

                    artifact sourceJar {
                        archiveClassifier.set("sources")
                    }

                    artifact javadocJar {
                        archiveClassifier.set("javadoc")
                    }
                    pom {
                        name = 'mynlp'
                        description = project.description
                        url = 'https://github.com/mayabot/mynlp'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'jimichan'
                                name = 'Jimi chan'
                                email = 'jimichan@gmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git@github.com:mayabot/mynlp.git'
                            developerConnection = 'scm:git:git@github.com:mayabot/mynlp.git'
                            url = 'git@github.com:mayabot/mynlp.git'
                        }
                    }

                }

            }

            repositories {

                if (project.hasProperty("maya_pri_user")) {
                    maven {
                        name 'MayaPrivate'
                        if (project.version.endsWith('-SNAPSHOT')) {
                            url "${maya_pri_snapshot}"
                        } else {
                            url = "${maya_pri_release}"
                        }
                        credentials {
                            username "${maya_pri_user}"
                            password "${maya_pri_pass}"
                        }
                    }
                }

                if (!snapShot && project.hasProperty("oss_user")) {
                    maven {
                        name 'OssPublic'
                        if (project.version.endsWith('-SNAPSHOT')) {
                            url "https://oss.sonatype.org/content/repositories/snapshots/"
                        } else {
                            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                        }

                        credentials {
                            username "${oss_user}"
                            password "${oss_password}"
                        }
                    }
                }

                if (!snapShot && project.hasProperty("github_token")) {
                    maven {
                        name 'GithubPublic'
                        url = "https://maven.pkg.github.com/mayabot/mynlp"

                        credentials {
                            username "jimichan"
                            password "${github_token}"
                        }
                    }
                }
            }
        }

        if(project.hasProperty("signing.keyId")){
            signing {
                sign publishing.publications.java
            }
        }
    }
}


if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.encoding = "UTF-8"
        }
        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn"]
        }

        tasks.withType(Javadoc) {
            options {
                encoding "UTF-8"
                charSet 'UTF-8'
                links "http://docs.oracle.com/javase/8/docs/api"
            }
        }
    }
}
